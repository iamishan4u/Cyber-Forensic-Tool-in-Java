/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package convict;

import Pendrive.Pendrive; 
import convict.Chrome.Chrome;
import convict.Configuration.Configuration;
import convict.Mozilla.Mozila;
import convict.Skype.Skype;
import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.FileWriter;
import java.io.InputStreamReader;

/**
 *
 *
 */
public class HomeFrame extends javax.swing.JFrame {
    CardLayout card;
    public HomeFrame() {
    initComponents();
    card=new CardLayout();
    centerCardPanel.setLayout(card);
    setCards();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        nwLabel = new javax.swing.JLabel();
        SkypeLabel = new javax.swing.JLabel();
        mainMenuLabel = new javax.swing.JLabel();
        sysLabel = new javax.swing.JLabel();
        chromeLabel = new javax.swing.JLabel();
        versionLabel = new javax.swing.JLabel();
        pendriveLabel1 = new javax.swing.JLabel();
        HeaderPanel = new javax.swing.JPanel();
        ProjectNameLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        centerCardPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(new java.awt.Color(102, 102, 102));

        MainPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jPanel3.setBackground(java.awt.Color.darkGray);
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nwLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nwLabel.setForeground(new java.awt.Color(255, 200, 0));
        nwLabel.setText("      N/w Config.");
        nwLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nwLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nwLabelMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nwLabelMouseClicked(evt);
            }
        });
        jPanel3.add(nwLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 197, 160, 54));

        SkypeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SkypeLabel.setForeground(java.awt.Color.orange);
        SkypeLabel.setText("      Skype");
        SkypeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SkypeLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SkypeLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SkypeLabelMouseExited(evt);
            }
        });
        jPanel3.add(SkypeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 160, 54));

        mainMenuLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        mainMenuLabel.setForeground(java.awt.Color.orange);
        mainMenuLabel.setText("      Main Menu");
        jPanel3.add(mainMenuLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 53, 160, 54));

        sysLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        sysLabel.setForeground(new java.awt.Color(255, 200, 0));
        sysLabel.setText("      System Config.");
        sysLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sysLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                sysLabelMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sysLabelMouseClicked(evt);
            }
        });
        jPanel3.add(sysLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 125, 160, 54));

        chromeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        chromeLabel.setForeground(new java.awt.Color(255, 200, 0));
        chromeLabel.setText("      Chrome");
        chromeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                chromeLabelMouseEntered(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chromeLabelMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                chromeLabelMouseExited(evt);
            }
        });
        jPanel3.add(chromeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 160, 54));

        versionLabel.setText("v 1.1.0");
        jPanel3.add(versionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 700, 103, -1));

        pendriveLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pendriveLabel1.setForeground(java.awt.Color.orange);
        pendriveLabel1.setText("      Pen Drive");
        pendriveLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pendriveLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pendriveLabel1MouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pendriveLabel1MouseClicked(evt);
            }
        });
        jPanel3.add(pendriveLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 160, 54));

        HeaderPanel.setBackground(new java.awt.Color(128, 128, 128));
        HeaderPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        HeaderPanel.setForeground(new java.awt.Color(255, 255, 255));

        ProjectNameLabel.setFont(new java.awt.Font("Algerian", 0, 36)); // NOI18N
        ProjectNameLabel.setForeground(new java.awt.Color(255, 200, 0));
        ProjectNameLabel.setText("Convict");

        javax.swing.GroupLayout HeaderPanelLayout = new javax.swing.GroupLayout(HeaderPanel);
        HeaderPanel.setLayout(HeaderPanelLayout);
        HeaderPanelLayout.setHorizontalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProjectNameLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HeaderPanelLayout.setVerticalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProjectNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        centerCardPanel.setBackground(new java.awt.Color(0, 0, 0));
        centerCardPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        centerCardPanel.setForeground(new java.awt.Color(0, 255, 0));

        javax.swing.GroupLayout centerCardPanelLayout = new javax.swing.GroupLayout(centerCardPanel);
        centerCardPanel.setLayout(centerCardPanelLayout);
        centerCardPanelLayout.setHorizontalGroup(
            centerCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 603, Short.MAX_VALUE)
        );
        centerCardPanelLayout.setVerticalGroup(
            centerCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(HeaderPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(centerCardPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addComponent(HeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(centerCardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void sysLabelMouseEntered(java.awt.event.MouseEvent evt) {                                      
      sysLabel.setOpaque(true);
      sysLabel.setBackground(new java.awt.Color(255,255,255));
    }                                     

    private void sysLabelMouseClicked(java.awt.event.MouseEvent evt) {                                      
        Configuration.configTextArea.setText("");
      sysLabel.setOpaque(true);
      sysLabel.setBackground(new java.awt.Color(64,64,64));  
      card.show(centerCardPanel, "configurationPanel");
       getSystemInfo();
    }                                     

    private void nwLabelMouseClicked(java.awt.event.MouseEvent evt) {                                     
        Configuration.configTextArea.setText("");
        nwLabel.setOpaque(true);
       nwLabel.setBackground(new java.awt.Color(64,64,64));
        getNetwokInfo();
    }                                    

    private void nwLabelMouseEntered(java.awt.event.MouseEvent evt) {                                     
       nwLabel.setOpaque(true);
       nwLabel.setBackground(new java.awt.Color(255,255,255));
    }                                    

    private void chromeLabelMouseEntered(java.awt.event.MouseEvent evt) {                                         
       chromeLabel.setOpaque(true);
       chromeLabel.setBackground(new java.awt.Color(255,255,255));
    }                                        

    private void chromeLabelMouseClicked(java.awt.event.MouseEvent evt) {                                         
        Chrome.ChromeTextArea.setText("");
        card.show(centerCardPanel,"ChromoPanel");
    }                                        

    private void SkypeLabelMouseEntered(java.awt.event.MouseEvent evt) {                                        
        SkypeLabel.setOpaque(true);
        SkypeLabel.setBackground(new java.awt.Color(255,255,255));
    }                                       

    private void SkypeLabelMouseClicked(java.awt.event.MouseEvent evt) {                                        
        Skype.SkypeTextArea.setText("");
        SkypeLabel.setOpaque(true);
        SkypeLabel.setBackground(new java.awt.Color(64,64,64)); 
        card.show(centerCardPanel, "SkypoPanel");
        
    }                                       

    private void sysLabelMouseExited(java.awt.event.MouseEvent evt) {                                     
        sysLabel.setOpaque(true);
       sysLabel.setBackground(new java.awt.Color(64,64,64));
    }                                    

    private void nwLabelMouseExited(java.awt.event.MouseEvent evt) {                                    
        nwLabel.setOpaque(true);
       nwLabel.setBackground(new java.awt.Color(64,64,64));
    }                                   

    private void chromeLabelMouseExited(java.awt.event.MouseEvent evt) {                                        
    chromeLabel.setOpaque(true);
       chromeLabel.setBackground(new java.awt.Color(64,64,64));
    }                                       

    private void pendriveLabel1MouseClicked(java.awt.event.MouseEvent evt) {                                            
        
        card.show(centerCardPanel, "pendrivoPanel");
    }                                           

    private void pendriveLabel1MouseEntered(java.awt.event.MouseEvent evt) {                                            
  pendriveLabel1.setOpaque(true);
  pendriveLabel1.setBackground(new java.awt.Color(255,255,255));
    }                                           

    private void SkypeLabelMouseExited(java.awt.event.MouseEvent evt) {                                       
       SkypeLabel.setOpaque(true);
       SkypeLabel.setBackground(new java.awt.Color(64,64,64));
    }                                      

    private void pendriveLabel1MouseExited(java.awt.event.MouseEvent evt) {                                           
       pendriveLabel1.setOpaque(true);
  pendriveLabel1.setBackground(new java.awt.Color(64,64,64));
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new HomeFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JPanel HeaderPanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JLabel ProjectNameLabel;
    private javax.swing.JLabel SkypeLabel;
    private javax.swing.JPanel centerCardPanel;
    private javax.swing.JLabel chromeLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel mainMenuLabel;
    private javax.swing.JLabel nwLabel;
    private javax.swing.JLabel pendriveLabel1;
    private javax.swing.JLabel sysLabel;
    private javax.swing.JLabel versionLabel;
    // End of variables declaration                   

    private void getSystemInfo() {
        try {
        String line;
        String[] cmd = {"cmd.exe", "/c", "systeminfo"};
        Process p = Runtime.getRuntime().exec(cmd);
        BufferedReader input = new BufferedReader(new 
        InputStreamReader(p.getInputStream()));
        while ((line = input.readLine()) != null) {
        Configuration.configTextArea.append(line+"\n");
        }
        }
        catch(Exception e)
         {
             e.printStackTrace();
         }
        }

        private void  getNetwokInfo() {
        try {
    	FileWriter fw;
        String line;
        boolean more = false;
        String[] cmd = {"cmd.exe", "/c", "ipconfig /all"};
        Process p = Runtime.getRuntime().exec(cmd);
         
        BufferedReader input = new BufferedReader(new 
        InputStreamReader(p.getInputStream()));
        while ((line = input.readLine()) != null) {
        Configuration.configTextArea.append(line+"\n");
         }
         }
         catch(Exception e)
         {
             e.printStackTrace();
         }
    }

    private void setCards() {
        centerCardPanel.add(Configuration.getInstance(), "configurationPanel");
        centerCardPanel.add(Chrome.getInstance(), "ChromoPanel"); 
        centerCardPanel.add(Mozila.getInstance(), "MozillPanel"); 
        centerCardPanel.add(Skype.getInstance(), "SkypoPanel"); 
        centerCardPanel.add(Pendrive.getInstance(), "pendrivoPanel");
    }

   }
