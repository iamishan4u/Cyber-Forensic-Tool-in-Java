/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package convict.Chrome;

import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JFileChooser;
import projectconvict.database.connection.DBConnection;

/**
 *
 * @author 
 */
        public class Chrome extends javax.swing.JPanel {
        public static Chrome ChromoPanel;
        JFileChooser fileChooser;
        String fullpath;
        Connection con;
        PreparedStatement p;
        public Chrome() {
        initComponents();
        }
        public static Chrome getInstance()
        {
            if(ChromoPanel==null)
            {
                ChromoPanel=new Chrome();
            }
            return ChromoPanel;
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
  
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        chromemainPanel = new javax.swing.JPanel();
        ChromeHeaderPanel = new javax.swing.JPanel();
        ChromeLabel = new javax.swing.JLabel();
        ChromeComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        ChromeTextArea = new javax.swing.JTextArea();

        ChromeHeaderPanel.setBackground(new java.awt.Color(192, 192, 192));
        ChromeHeaderPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ChromeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ChromeLabel.setText("Check For:");

        ChromeComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ChromeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----Select----", "Urls", "Keywords", "Downloads" }));
        ChromeComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ChromeComboBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout ChromeHeaderPanelLayout = new javax.swing.GroupLayout(ChromeHeaderPanel);
        ChromeHeaderPanel.setLayout(ChromeHeaderPanelLayout);
        ChromeHeaderPanelLayout.setHorizontalGroup(
            ChromeHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChromeHeaderPanelLayout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(ChromeLabel)
                .addGap(18, 18, 18)
                .addComponent(ChromeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(207, Short.MAX_VALUE))
        );
        ChromeHeaderPanelLayout.setVerticalGroup(
            ChromeHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChromeHeaderPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ChromeHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChromeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChromeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        ChromeTextArea.setBackground(new java.awt.Color(0, 0, 0));
        ChromeTextArea.setColumns(20);
        ChromeTextArea.setForeground(new java.awt.Color(0, 255, 0));
        ChromeTextArea.setRows(5);
        jScrollPane1.setViewportView(ChromeTextArea);

        javax.swing.GroupLayout chromemainPanelLayout = new javax.swing.GroupLayout(chromemainPanel);
        chromemainPanel.setLayout(chromemainPanelLayout);
        chromemainPanelLayout.setHorizontalGroup(
            chromemainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ChromeHeaderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        chromemainPanelLayout.setVerticalGroup(
            chromemainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chromemainPanelLayout.createSequentialGroup()
                .addComponent(ChromeHeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chromemainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chromemainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>                        

    private void ChromeComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {                                                
       
       if(ChromeComboBox.getSelectedIndex()==1)
       {
           try {
                 System.out.println("1 CHROME");
                con=DBConnection.getChromeConnection();
                p=con.prepareStatement("select url from urls");
//               PreparedStatement p=DBConnection.getChromeConnection().prepareStatement("select url from urls");
                 ResultSet rs=p.executeQuery();
                 while(rs.next())
                 {
                    ChromeTextArea.append(rs.getString("url") +"\n");
                 }
                 con.close();
                }catch (Exception ex) {
                 ex.printStackTrace();
                }
       }
        if(ChromeComboBox.getSelectedIndex()==2)
       {
           try {
              
                System.out.println("2 CHROME");
                con=DBConnection.getChromeConnection();
                p=con.prepareStatement("select term from keyword_search_terms");
//                PreparedStatement p=DBConnection.getChromeConnection().prepareStatement("select term from keyword_search_terms");
                ResultSet rs=p.executeQuery();
                while(rs.next())
                {
                    ChromeTextArea.append(rs.getString("term") +"\n");
                }
                con.close();
            }catch (Exception ex) {
                ex.printStackTrace();
            }

       }
        if(ChromeComboBox.getSelectedIndex()==3)
       {
           try {
                System.out.println("3 CHROME");
                con=DBConnection.getChromeConnection();
                p =con.prepareStatement("select target_path from downloads");
//                PreparedStatement p=DBConnection.getChromeConnection().prepareStatement("select target_path from downloads");
                ResultSet rs=p.executeQuery();
                while(rs.next())
                {
                    ChromeTextArea.append(rs.getString("target_path") +"\n");
                }
                con.close();
            }catch (Exception ex) {
                ex.printStackTrace();
            } 
       }
    }                                               

    // Variables declaration - do not modify                     
    private javax.swing.JComboBox ChromeComboBox;
    private javax.swing.JPanel ChromeHeaderPanel;
    private javax.swing.JLabel ChromeLabel;
    public static javax.swing.JTextArea ChromeTextArea;
    private javax.swing.JPanel chromemainPanel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration                   
}
